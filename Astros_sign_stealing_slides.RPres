Bang the Can Slowly: An Investigation into the 2017 Houston Astros 
========================================================
author: Ryan T. Elmore and Gregory J. Matthews
date: October 25, 2020
autosize: true

Sign Stealing
========================================================
 - In baseball, it is helpful for the the catcher to know the type of pitch that the pitcher will throw. 
 - In order to communicate this information, the catcher will flash signs to the pitcher with his hand between his legs. 
 - It is important for the pitcher and catcher that the batter does not know the type of pitch that is coming as batter uncertainty about the type of the pitch is an important tool in a pitchers arsenal

Sign Stealing
========================================================

![alt text here](https://media.khou.com/assets/KHOU/images/9e071b90-b209-419a-be62-f19300af2e55/9e071b90-b209-419a-be62-f19300af2e55_1920x1080.jpg)


Did it actually affect the game? 
========================================================

 - "**Our opinion is this didn't impact the game**. We had a good team. We won the World Series and we'll leave it at that" - Jim Crane, Houston Astros owner, February 13, 2020
 - So.....did it affect the game?
 
 How can we answer this question? 
========================================================

 - Ideal data: Pitch-level data with information about...
  - Type of pitch
  - Pitch outcome (Batter Swing?  Batter Contact?) 
  - Exit Velocity
  - **Was there a bang on the pitch?** (Thank you, Tony Adams!)
 
Which players stole the most signs? 
========================================================

```{r echo = FALSE, fig.width = 10}
library(dplyr)
library(ggplot2)
library(lubridate)
library(questionr)

df <- readRDS("data/bangs-merged-final.rds") %>% mutate(has_bangs = if_else(has_bangs == "y", "Yes", "No"))

# df %>%
#   group_by(has_bangs, pitch_category) %>%
#   summarize(n = n())

## Bangs by top nine players
players <- df %>%
  group_by(batter) %>%
  summarize(n = n()) %>%
  arrange(desc(n)) %>%
  top_n(9) %>%
  pull(batter) %>%
  as.character()

p <- df %>%
  filter(batter %in% players) %>%
  group_by(batter, has_bangs) %>%
  summarize(n = n()) %>%
  ggplot(., aes(x = reorder(batter, n), y = n, fill = has_bangs)) 

# p + geom_bar(stat = "identity", position = "dodge") +
p + geom_bar(stat = "identity") +
  scale_fill_manual("bangs", values = c("#002D62", "#EB6E1F"),
                    labels = c("no", "yes")) +
  labs(y = "number of pitches",
       x = "") +
  theme_bw() +
  coord_flip()

```

Bangs over the season
========================================================
```{r echo = FALSE, fig.width = 10}
df_bangs_time <- inner_join(
  df %>%
    filter(has_bangs == "Yes") %>%
    group_by(m = month(game_date, label = TRUE)) %>%
    summarize(n = n()),
  df_bangs_time <- df %>%
    group_by(m = month(game_date, label = TRUE)) %>%
    summarize(abs = n())) 
df_bangs_time$ratio = df_bangs_time$n/df_bangs_time$abs

p <- ggplot(data = df_bangs_time,
            aes(x = m, y = n, fill = "#002D62"))
p + geom_bar(stat = "identity") +
  scale_fill_manual("bangs", values = c("#002D62")) +
  labs(x = "month",
       y = "number of bangs") +
  guides(fill = F) +
  theme_bw()
```


How good was the code? 
========================================================
```{r echo = FALSE, fig.width = 10}
library(ggmosaic)
df$Fastball <- ifelse(df$pi_pitch_group == "FA", "Yes", "No") 
# df %>% 
#   group_by(has_bangs,Fastball) %>% 
#   summarize(n = n()) %>% 
#   mutate(prop = n / sum(n))

temp <- df[,c("Fastball","has_bangs")]
temp$Fastball <- as.factor(temp$Fastball)
temp$has_bangs <- as.factor(temp$has_bangs)

library(grid)
library(teamcolors)
hou1 <- subset(teamcolors, name == "Houston Astros")$primary
hou2 <- subset(teamcolors, name == "Houston Astros")$secondary

p <- ggplot(data = temp) +
   geom_mosaic(aes(x = product(Fastball,has_bangs), fill=Fastball), na.rm=TRUE, alpha = 1) + labs(x = "Bangs",y="", title='How often were bangs correct?') 
# Create a text
grob <- grobTree(textGrob("No", x=0.395,  y=0.05, hjust=0,
  gp=gpar(col="black", fontsize=13, fontface="italic")))
# Plot
grob2 <- grobTree(textGrob("Yes", x=0.84,  y=0.05, hjust=0,
  gp=gpar(col="black", fontsize=13, fontface="italic")))
# Plot
p + annotation_custom(grob) + annotation_custom(grob2) + scale_fill_manual(values = c(hou2, hou1)) +theme_bw()



```

 
 
 Models
========================================================
 1. Swing model
    - Fixed effects: fastball, called strike probability and count
    - Random effect: intercept for batter
 2. Contact model given a swing
    - Fixed effects: fastball, called strike probability, and interaction between fastball and bangs
    - Random effects: intercepts for batter and pitcher, and bangs slope for batters 
 3. Exit Velocity model given a contact
    - Fixed effects: fastball and called strike probability
    - Random effects: intercepts for batter and pitcher
 
 
Results
========================================================
 1. **Less swinging**
  - Odds of a swing are about 28% lower (OR 95% CI: 0.618, 0.850)
 2. **More contact on swings (on off-speed pitches)**
  - Given a swing and an offspeed pitch, odds of contact are about 80% higher (OR 95% CI: 1.342, 2.675)
 3. **Increased Exist Velocity**
  - Given a contact, 2.386 mile per hours average increase in exit velocity  (95% CI: 0.334, 4.451)

 Increased Exit velocity 
========================================================
 - A ball hit with exit velocity of 100 mph at a launch angle of 30 degrees will travel about 385.3 feet before landing. 
 - A ball hit with exit velocity of 102.386 mph at a launch angle of 30 degrees will travel about 397.9 feet (i.e. 12.6 additional feet) before landing. 
 - This is the difference between a longfly ball to straight away center field (likely an out) and a home run at Fenway Park, where home run is 389' 9" inches to center field
  
 
 
 Not everyone benefitted equally
========================================================


```{r echo = FALSE}
#   Ryan Elmore
#  5 Aug 2020
#  Modeling Bangs

 library(dplyr)
 library(lme4)

  #delete pitch_playod = 6ed53428-fd72-4e13-b1ac-3d8e851d1410
  #Mother f
  #df[which(grepl("*Interference", df$at_bat_event, ignore.case = T)), ]
 df <- readRDS("data/bangs-merged-final.rds") %>%
   dplyr::rename(., description = description.x) %>%
   dplyr::mutate(.,
                 has_bangs = if_else(has_bangs == "y", "Yes", "No"),
                 count = paste(ball, "-", strike, sep = ""),
                 is_swing = ifelse(swing == "swing",1,0),
                 is_miss = ifelse(call_code %in% c("S","W"), 1, 0),
                 is_contact = ifelse(call_code %in% c("S","W"), 0, 1),
                 is_foul = ifelse(description %in%
                                    c("Foul", "Foul Tip", "Foul (Runner Going)"),1, 0),
                 is_fastball = ifelse(pitch_category == "FB", 1, 0),
                 is_fastball = ifelse(pi_pitch_group == "FA", 1, 0),
                 batter_mlbid = as.character(batter_mlbid))

                 swings <- df %>%
   dplyr::filter(., is_swing == 1)

 library(lme4)
 contact_model <- glmer(is_contact ~  cs_prob + is_fastball*has_bangs + (1 + has_bangs|batter_mlbid)  + (1|mlbid)  , data = swings, family = "binomial")

 ids <- swings[!duplicated(swings$batter_mlbid),c("batter_mlbid","batter_first","batter_last")]
 r_effects <- data.frame(batter_mlbid = row.names(coef(contact_model)$batter_mlbid), int = coef(contact_model)$batter_mlbid$`(Intercept)`,slope = coef(contact_model)$batter_mlbid$has_bangsYes)
 r_effects <- merge(ids,r_effects, by.x = "batter_mlbid",by.y = "batter_mlbid")
 r_effects <- r_effects[order(-r_effects$slope),]
 r_effects$name <- paste(r_effects$batter_first, r_effects$batter_last)
 row.names(r_effects) <- NULL
 r_effects[1:10,c("name","int","slope")]
```


Curious, George
========================================================
 - On off speed pitches, George Springer has a 281% increase (OR 3.81, 95% CI: 2.042, 12.864) in his odds of contact given a swing in the presence of a bang.  
 - In our data we have 390 George Springer swings and 165 of those swings were on off-speed pitches.  
 - With no bang present Springer missed on 40 of 119 for a swing and miss rate of 33.61% (95% CI: 25.37%, 42.93%).
 - With a bang present Springer missed on only 3 (THREE!?!) of 46 for a swing and miss rate of 6.52% (95% CI: 1.7%, 18.93%)
 
```{r echo = FALSE, fig.width = 10}
## Ryan Elmore
## 5 Aug 2020
## Modeling Bangs

library(dplyr)
library(lme4)

# delete pitch_playod = 6ed53428-fd72-4e13-b1ac-3d8e851d1410
# Mother f
# df[which(grepl("*Interference", df$at_bat_event, ignore.case = T)), ]
df <- readRDS("data/bangs-merged-final.rds") %>%
  dplyr::rename(., description = description.x) %>%
  dplyr::mutate(.,
                has_bangs = if_else(has_bangs == "y", "Yes", "No"),
                count = paste(ball, "-", strike, sep = ""),
                is_swing = ifelse(swing == "swing",1,0),
                is_miss = ifelse(call_code %in% c("S","W"), 1, 0),
                is_contact = ifelse(call_code %in% c("S","W"), 0, 1),
                is_foul = ifelse(description %in%
                                   c("Foul", "Foul Tip", "Foul (Runner Going)"),1, 0),
                #is_fastball = ifelse(pitch_category == "FB", 1, 0),
                is_fastball = ifelse(pi_pitch_group == "FA", 1, 0),
                batter_mlbid = as.character(batter_mlbid))

                swings <- df %>%
  dplyr::filter(., is_swing == 1)

library(ggmosaic)
#df$Fastball <- ifelse(df$pi_pitch_group == "FA", "Yes", "No") 
swings$Contact <- ifelse(swings$is_contact == 1, "Contact", "Miss") 
temp <- subset(swings, batter == "George Springer" & is_swing == 1 & is_fastball == 0)

#table(temp$has_bangs,temp$Contact)

library(grid)
library(teamcolors)
hou1 <- subset(teamcolors, name == "Houston Astros")$primary
hou2 <- subset(teamcolors, name == "Houston Astros")$secondary

p <- ggplot(data = temp) +
   geom_mosaic(aes(x = product(Contact,has_bangs), fill=Contact), na.rm=TRUE, alpha = 1) + labs(x = "Bangs",y="", title='Springer swings at off-speed pitches') 
# Create a text
grob <- grobTree(textGrob("No", x=0.33,  y=0.05, hjust=0,
  gp=gpar(col="black", fontsize=13, fontface="italic")))
# Plot
grob2 <- grobTree(textGrob("Yes", x=0.77,  y=0.05, hjust=0,
  gp=gpar(col="black", fontsize=13, fontface="italic")))
# Plot
p + annotation_custom(grob) + annotation_custom(grob2) + scale_fill_manual(values = c(hou2, hou1)) +theme_bw()



```
 

Conclusions 
========================================================
 **In the presence of a bang** 
 - Odds of a swing are about 28% lower  
 (OR 95% CI: 0.618, 0.850)
 - Given a swing and an offspeed pitch, odds of contact are about 80% higher (OR 95% CI: 1.342, 2.675)
  - George Springer got A LOT better at making contact with off-speed pitches given a swing. 
 - Given a contact, 2.386 mile per hours average increase in exit velocity  (95% CI: 0.334, 4.451)
 
 
 Cheers!
============================================================
 - Ryan T. Elmore (@rtelmore)
 - Gregory J. Matthews (@statsinthewild)
 - Github Repo: gjm112/Astros_sign_stealing
 - Bangs Data: http://signstealingscandal.com/files/
 


